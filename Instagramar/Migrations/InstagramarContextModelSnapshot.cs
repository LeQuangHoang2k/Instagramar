// <auto-generated />
using System;
using Instagramar.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Instagramar.Migrations
{
    [DbContext(typeof(InstagramarContext))]
    partial class InstagramarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Instagramar.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Comment");

                    b.Property<int?>("CommentFromUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PostId" }, "PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Instagramar.Models.Follow", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int?>("FollowedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FollowingUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasIndex(new[] { "FollowedUserId" }, "FollowedUserId");

                    b.HasIndex(new[] { "FollowingUserId" }, "FollowingUserId");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("Instagramar.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int?>("LikeToId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "LikeToId" }, "LikeToId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Instagramar.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("text")
                        .HasComment("Content of the post");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Video")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AuthorId" }, "AuthorId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Instagramar.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HashPassword")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Instagramar.Models.Comment", b =>
                {
                    b.HasOne("Instagramar.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .HasConstraintName("Comments_ibfk_1");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Instagramar.Models.Follow", b =>
                {
                    b.HasOne("Instagramar.Models.User", "FollowedUser")
                        .WithMany()
                        .HasForeignKey("FollowedUserId")
                        .HasConstraintName("Follows_ibfk_2");

                    b.HasOne("Instagramar.Models.User", "FollowingUser")
                        .WithMany()
                        .HasForeignKey("FollowingUserId")
                        .HasConstraintName("Follows_ibfk_1");

                    b.Navigation("FollowedUser");

                    b.Navigation("FollowingUser");
                });

            modelBuilder.Entity("Instagramar.Models.Like", b =>
                {
                    b.HasOne("Instagramar.Models.Comment", "LikeTo")
                        .WithMany("Likes")
                        .HasForeignKey("LikeToId")
                        .HasConstraintName("Likes_ibfk_1");

                    b.HasOne("Instagramar.Models.Post", "LikeToNavigation")
                        .WithMany("Likes")
                        .HasForeignKey("LikeToId")
                        .HasConstraintName("Likes_ibfk_2");

                    b.Navigation("LikeTo");

                    b.Navigation("LikeToNavigation");
                });

            modelBuilder.Entity("Instagramar.Models.Post", b =>
                {
                    b.HasOne("Instagramar.Models.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("Posts_ibfk_1");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Instagramar.Models.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Instagramar.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Instagramar.Models.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
